// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as Theme from "./Theme.bs.mjs";
import * as React from "react";
import * as Caml_obj from "rescript/lib/es6/caml_obj.js";
import * as DropDown from "./DropDown.bs.mjs";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as Core__Option from "@rescript/core/src/Core__Option.bs.mjs";
import ReactSelect from "react-select";
import * as DropdownIndicator from "./DropdownIndicator.bs.mjs";
import * as JsxRuntime from "react/jsx-runtime";

import './styles.css'
;

var reactSelectStyles_control = (function (props) {
    var newrecord = Caml_obj.obj_dup(props);
    newrecord.flexDirection = "row-reverse";
    newrecord.boxShadow = "none";
    newrecord.paddingLeft = "10px";
    newrecord.paddingRight = "10px";
    newrecord.border = "none";
    return newrecord;
  });

var reactSelectStyles_menu = (function (param) {
    return {
            borderTop: Theme.border,
            width: "230px"
          };
  });

var reactSelectStyles_option = (function (props, state) {
    var newrecord = Caml_obj.obj_dup(props);
    newrecord.padding = "4px 10px 4px 10px";
    newrecord.color = Theme.colors.text.primary;
    newrecord.backgroundColor = state.isSelected ? "#FFDBB3" : (
        state.isFocused ? "#ffe9d1" : "transparent"
      );
    return newrecord;
  });

var reactSelectStyles = {
  control: reactSelectStyles_control,
  menu: reactSelectStyles_menu,
  option: reactSelectStyles_option
};

function CountrySelect$Chevron(props) {
  return JsxRuntime.jsx("svg", {
              children: JsxRuntime.jsx("path", {
                    clipRule: "evenodd",
                    d: "M0 2H8L4 7L0 2Z",
                    fill: "#333333",
                    fillRule: "evenodd"
                  }),
              height: "8",
              width: "8",
              fill: "none",
              viewBox: "0 0 8 8",
              xmlns: "http://www.w3.org/2000/svg"
            });
}

var Chevron = {
  make: CountrySelect$Chevron
};

function flag(countryCode) {
  return JsxRuntime.jsx("span", {
              className: "fi fi-" + countryCode,
              style: {
                height: "14px",
                width: "14px"
              }
            });
}

function CountrySelect$FlagAndName(props) {
  var option = props.option;
  return JsxRuntime.jsxs("div", {
              children: [
                flag(option.value),
                JsxRuntime.jsx("span", {
                      children: option.label
                    })
              ],
              style: {
                display: "flex",
                alignItems: "center",
                gap: "6px"
              }
            });
}

var FlagAndName = {
  make: CountrySelect$FlagAndName
};

function CountrySelect$Target(props) {
  var onClick = props.onClick;
  return JsxRuntime.jsxs("div", {
              children: [
                Core__Option.mapWithDefault(props.value, "Select a country", (function (option) {
                        return JsxRuntime.jsx(CountrySelect$FlagAndName, {
                                    option: option
                                  });
                      })),
                JsxRuntime.jsx(CountrySelect$Chevron, {})
              ],
              style: {
                backgroundColor: Theme.background,
                border: Theme.border,
                display: "inline-flex",
                padding: "4px 10px 4px 10px",
                borderRadius: "3px",
                alignItems: "center",
                gap: "8px"
              },
              onClick: (function (param) {
                  Curry._1(onClick, undefined);
                })
            });
}

var Target = {
  make: CountrySelect$Target
};

var placeholder = JsxRuntime.jsx("span", {
      children: "Search",
      style: {
        color: Theme.colors.text.tertiary
      }
    });

function roundOneDecimal(n) {
  return Math.round(n * 10) / 10;
}

function CountrySelect$OptionDisplay(props) {
  var option = props.option;
  var labelLength = option.label.length;
  var mockStat = labelLength * 10 + labelLength * 0.2;
  var stat = String(roundOneDecimal(mockStat)) + "K";
  return JsxRuntime.jsxs("div", {
              children: [
                JsxRuntime.jsx(CountrySelect$FlagAndName, {
                      option: option
                    }),
                JsxRuntime.jsx("span", {
                      children: stat,
                      style: {
                        color: Theme.colors.text.secondary,
                        fontSize: "14px"
                      }
                    })
              ],
              style: {
                display: "flex",
                justifyContent: "space-between"
              }
            });
}

var OptionDisplay = {
  roundOneDecimal: roundOneDecimal,
  make: CountrySelect$OptionDisplay
};

function CountrySelect(props) {
  var match = React.useState(function () {
        return false;
      });
  var setIsOpen = match[1];
  var match$1 = React.useState(function () {
        
      });
  var setValue = match$1[1];
  var value = match$1[0];
  return JsxRuntime.jsx(DropDown.make, {
              children: JsxRuntime.jsx(ReactSelect, {
                    autoFocus: false,
                    backspaceRemovesValue: false,
                    components: {
                      DropdownIndicator: (function (param) {
                          return JsxRuntime.jsx(DropdownIndicator.make, {});
                        }),
                      IndicatorSeparator: (function (param) {
                          return null;
                        })
                    },
                    controlShouldRenderValue: false,
                    hideSelectedOptions: false,
                    isClearable: false,
                    menuIsOpen: true,
                    onChange: (function (opt) {
                        Curry._1(setValue, (function (param) {
                                return opt;
                              }));
                        Curry._1(setIsOpen, (function (param) {
                                return false;
                              }));
                      }),
                    options: props.options,
                    placeholder: Caml_option.some(placeholder),
                    styles: reactSelectStyles,
                    tabSelectsValue: false,
                    value: Caml_option.some(value),
                    formatOptionLabel: (function (option) {
                        return JsxRuntime.jsx(CountrySelect$OptionDisplay, {
                                    option: option
                                  });
                      }),
                    classNamePrefix: "react-select"
                  }),
              isOpen: match[0],
              target: JsxRuntime.jsx(CountrySelect$Target, {
                    value: value,
                    onClick: (function (param) {
                        Curry._1(setIsOpen, (function (v) {
                                return !v;
                              }));
                      })
                  }),
              onClose: (function (param) {
                  Curry._1(setIsOpen, (function (param) {
                          return false;
                        }));
                })
            });
}

var make = CountrySelect;

export {
  reactSelectStyles ,
  Chevron ,
  flag ,
  FlagAndName ,
  Target ,
  placeholder ,
  OptionDisplay ,
  make ,
}
/*  Not a pure module */
